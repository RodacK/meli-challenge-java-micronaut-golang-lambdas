{
  "swagger": "2.0",
  "info": {
    "description": "endpints para los rebeldes",
    "version": "2021-01-23T13:08:54Z",
    "title": "quasar"
  },
  "host": "8fnvvqo2p8.execute-api.us-east-2.amazonaws.com",
  "basePath": "/pro",
  "schemes": [
    "https"
  ],
  "paths": {
    "/topsecret": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "satellitesData",
            "required": true,
            "schema": {
              "$ref": "#/definitions/satellitesData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/satellitesResponse"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          },
          "422": {
            "description": "422 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Cuerpo validado",
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:102287414076:function:quasar/invocations",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{\n    \"position\":{\n        \"x\": $inputRoot.position.x,\n        \"y\": $inputRoot.position.y\n        },\n    \"message\": \"$inputRoot.message\"\n}"
              }
            },
            "^422.+": {
              "statusCode": "422",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n#set($inputSplit = $inputRoot.errorMessage.split(\"-\"))\n{\n    #if($inputSplit.size() > 1)\n        \"data\":{\n            \"code\": \"$inputSplit[1]\",\n            \"message\": \"$inputSplit[2]\"\n        }\n    #else\n        \"data\":{\n            \"code\": \"$inputRoot.errorType\",\n            \"message\": \"$inputRoot.errorMessage\"\n        }\n    #end\n}"
              }
            },
            "^500.+": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n#set($inputSplit = $inputRoot.errorMessage.split(\"-\"))\n{\n    #if($inputSplit.size() > 1)\n        \"data\":{\n            \"code\": \"$inputSplit[1]\",\n            \"message\": \"$inputSplit[2]\"\n        }\n    #else\n        \"data\":{\n            \"code\": \"$inputRoot.errorType\",\n            \"message\": \"$inputRoot.errorMessage\"\n        }\n    #end\n}"
              }
            },
            "^404.+": {
              "statusCode": "404",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n#set($inputSplit = $inputRoot.errorMessage.split(\"-\"))\n{\n    #if($inputSplit.size() > 1)\n        \"data\":{\n            \"code\": \"$inputSplit[1]\",\n            \"message\": \"$inputSplit[2]\"\n        }\n    #else\n        \"data\":{\n            \"code\": \"$inputRoot.errorType\",\n            \"message\": \"$inputRoot.errorMessage\"\n        }\n    #end\n}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "#set($inputRoot = $input.path('$'))\n{\n    \"satellites\": [\n        {\n            \"name\": \"$inputRoot.satellites[0].name\",\n            \"distance\": $inputRoot.satellites[0].distance,\n            \"message\": $inputRoot.satellites[0].message\n        },\n        {\n            \"name\": \"$inputRoot.satellites[1].name\",\n            \"distance\": $inputRoot.satellites[1].distance,\n            \"message\": $inputRoot.satellites[1].message\n        },\n        {\n            \"name\": \"$inputRoot.satellites[2].name\",\n            \"distance\": $inputRoot.satellites[2].distance,\n            \"message\": $inputRoot.satellites[2].message\n        }\n    ]\n}\n    \n"
          },
          "passthroughBehavior": "when_no_templates",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/topsecret_split": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/satellitesResponse"
            }
          },
          "404": {
            "description": "404 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          },
          "422": {
            "description": "422 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:102287414076:function:quasar3/invocations",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{\n    \"position\":{\n        \"x\": $inputRoot.position.x,\n        \"y\": $inputRoot.position.y\n        },\n    \"message\": \"$inputRoot.message\"\n}"
              }
            },
            "^422.+": {
              "statusCode": "422",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n#set($inputSplit = $inputRoot.errorMessage.split(\"-\"))\n{\n    #if($inputSplit.size() > 1)\n        \"data\":{\n            \"code\": \"$inputSplit[1]\",\n            \"message\": \"$inputSplit[2]\"\n        }\n    #else\n        \"data\":{\n            \"code\": \"$inputRoot.errorType\",\n            \"message\": \"$inputRoot.errorMessage\"\n        }\n    #end\n}"
              }
            },
            "^500.+": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n#set($inputSplit = $inputRoot.errorMessage.split(\"-\"))\n{\n    #if($inputSplit.size() > 1)\n        \"data\":{\n            \"code\": \"$inputSplit[1]\",\n            \"message\": \"$inputSplit[2]\"\n        }\n    #else\n        \"data\":{\n            \"code\": \"$inputRoot.errorType\",\n            \"message\": \"$inputRoot.errorMessage\"\n        }\n    #end\n}"
              }
            },
            "^404.+": {
              "statusCode": "404",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n#set($inputSplit = $inputRoot.errorMessage.split(\"-\"))\n{\n    #if($inputSplit.size() > 1)\n        \"data\":{\n            \"code\": \"$inputSplit[1]\",\n            \"message\": \"$inputSplit[2]\"\n        }\n    #else\n        \"data\":{\n            \"code\": \"$inputRoot.errorType\",\n            \"message\": \"$inputRoot.errorMessage\"\n        }\n    #end\n}"
              }
            }
          },
          "passthroughBehavior": "when_no_match",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/topsecret_split/{satellite_name}": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "satellite_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "satelliteWithoutName",
            "required": true,
            "schema": {
              "$ref": "#/definitions/satelliteWithoutName"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "201 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          },
          "422": {
            "description": "422 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          },
          "500": {
            "description": "500 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          },
          "503": {
            "description": "503 response",
            "schema": {
              "$ref": "#/definitions/ErrorData"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "Cuerpo validado",
        "x-amazon-apigateway-integration": {
          "uri": "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:102287414076:function:quasar2/invocations",
          "httpMethod": "POST",
          "responses": {
            "default": {
              "statusCode": "201"
            },
            "^422.+": {
              "statusCode": "422",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n#set($inputSplit = $inputRoot.errorMessage.split(\"-\"))\n{\n    #if($inputSplit.size() > 1)\n        \"data\":{\n            \"code\": \"$inputSplit[1]\",\n            \"message\": \"$inputSplit[2]\"\n        }\n    #else\n        \"data\":{\n            \"code\": \"$inputRoot.errorType\",\n            \"message\": \"$inputRoot.errorMessage\"\n        }\n    #end\n}"
              }
            },
            "^500.+": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n#set($inputSplit = $inputRoot.errorMessage.split(\"-\"))\n{\n    #if($inputSplit.size() > 1)\n        \"data\":{\n            \"code\": \"$inputSplit[1]\",\n            \"message\": \"$inputSplit[2]\"\n        }\n    #else\n        \"data\":{\n            \"code\": \"$inputRoot.errorType\",\n            \"message\": \"$inputRoot.errorMessage\"\n        }\n    #end\n}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "#set($inputRoot = $input.path('$'))\n{\n    \"name\": \"$method.request.path.satellite_name\",\n    \"distance\": $inputRoot.distance,\n    \"message\": $inputRoot.message\n    \n}"
          },
          "passthroughBehavior": "when_no_templates",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      },
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "x-api-key",
      "in": "header"
    }
  },
  "definitions": {
    "Empty": {
      "type": "object",
      "title": "Empty Schema"
    },
    "satellitesResponse": {
      "type": "object",
      "required": [
        "message",
        "position"
      ],
      "properties": {
        "message": {
          "type": "string"
        },
        "position": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "satellitesData": {
      "required": [
        "satellites"
      ],
      "properties": {
        "satellites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/satellite"
          }
        }
      }
    },
    "satelliteWithoutName": {
      "type": "object",
      "required": [
        "distance",
        "message"
      ],
      "properties": {
        "distance": {
          "type": "number"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "errorMessage": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "satellite": {
      "type": "object",
      "required": [
        "distance",
        "message",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "distance": {
          "type": "number"
        },
        "message": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ErrorData": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/errorMessage"
        }
      }
    }
  },
  "x-amazon-apigateway-request-validators": {
    "Cuerpo validado": {
      "validateRequestParameters": false,
      "validateRequestBody": true
    }
  }
}